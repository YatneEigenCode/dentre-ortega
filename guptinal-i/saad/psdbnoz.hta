<HTA:APPLICATION border="thin" borderStyle="normal" caption="yes" icon="favicon.ico" 
id="oHTA"
maximizeButton="yes" minimizeButton="yes" showInTaskbar="yes" windowState="normal"innerBorder="yes"
navigable="yes" scroll="no" scrollFlat="yes" /> 
<title>Psdb Noz</title>
<html>
<body style="background-color:whitesmoke">
<form name=appForm>
<br>Input file <input name=tx1 value="" size=45 maxlength=90>
<input type=button name=recent_filename value="foo" onclick=pageApp.doButton(this)>
<br />Repeat<input type=checkbox name=cb1>
</form>
<div id=result style="overflow:scroll;height:280;background-color:lightyellow;font-family:courier"></div>
<br><input type=button value="Open output folder" onclick=window.open('output')>
</body>
</html>

<script>
//psdbnoz.hta 1-23-2016 JChoy checkbox 
function PageApp(frm){
    this.frm= frm;
    this.num= {ts:11, psdb:164};
    //read ts
    //continue only if modified since last read
    //interpret first line
    //write file
    //repeat every 5 seconds
    this.init= function(){
      this.pw = new PsdbWriter("C:\\lcpub\\proj16\\psdb\\ape\\");
      this.ajax= new Ajax();
      var pt= this;
      this.ajax.write= function(s){ alert(s); pt.detectChange(s) }
    }
    this.doButton= function(btn){
      this.frm.tx1.value = this.frm.cb1.checked;
      if (!this.pw) this.init();
      var url= "http://z.be/ts.php?f=text&i=" +this.num.ts;
      this.ajax.webGet(url);
    }
    this.detectChange= function(s){
      if (s != this.prevDat)
        this.parseCmd( this.prevDat=s );
    }
    this.parseCmd= function(s){
      //!/c/psdb /S 152 !/ENDCMD
      var br1 = s.indexOf("\n");
      var at=s.substr(0,br1).toUpperCase();
      var parms= (at[0] != "!/C/PSDB") ? {} : this.parseParams(at);
      if (parms.num) this.pw.write( parms.num, s.substr(br1+1) );
    }
    this.parseParams= function(at){
      var res= [{},""];
      for (var i=1; i<at.length; i++){
        if (res[1]) res[0][res[1]]= at[i];
        res[1]="";
        if (at[i]=="/S") res[1]="num";
      }
      return res[0];
    }
}
//-----
function PsdbWriter(rootPath){
    this.msf = new MSFeatures();
    this.path = rootPath;
    this.write= function( num, s ){
      var fn= num.toString();
      fn = fn.length + "d\\" + fn.split('').join("\\") + ".txt"; 
      var fo = this.msf.fso.openTextFile( this.path+fn, 2, true );
      fo.write( s );
      fo.close();
    }
}
function Ajax() {
	this.newHttpRequest= function(){
		if (window.ActiveXObject)
			return new ActiveXObject( "Msxml2.XMLHTTP" )
		else 
			return new XMLHttpRequest();
	}
	this.onmorph= function(){ this.webGet(); }
	this.webPost= function( url, handler ){
		var scraper = this.scraper = this.newHttpRequest();
		var url= (url)? url:this.getAttr("src","",this);
		if ((!scraper) || (!url)) return;
		try {
		 var myMethod= "POST";
		 scraper.open( myMethod, url.substr(0,url.indexOf('?')), true );
		 scraper.onreadystatechange= this.anfuge( (handler)?handler:"handleHttp" );
		 scraper.setRequestHeader( "If-Modified-Since", "Sat, 1 Jan 2000 00:00:00 GMT" );
		   var params = url.substr(url.indexOf('?')+1);
		   scraper.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
		   scraper.setRequestHeader("Content-length", params.length);
		   scraper.setRequestHeader("Connection", "close");
		   scraper.send(params);
		} catch (e) { this.handleError( e ); }
	}
	this.webGet= function( url, handler, post ){
                var scraper = this.scraper = this.newHttpRequest();
                //var url= (url)? url:this.getAttr("src","",this);
                if ((!scraper) || (!url)) return;
                try {
                 var myMethod= (post)? post:"GET";
                 scraper.open( myMethod, url, true );
                 scraper.onreadystatechange= this.anfuge( (handler)?handler:"handleHttp" );
                 scraper.setRequestHeader( "If-Modified-Since", "Sat, 1 Jan 2000 00:00:00 GMT" );
                 scraper.send(true);
                } catch (e) { this.handleError( e ); }
        }
	this.handleHttp= function(){
		if (this.scraper.readyState != 4) return;
		if ((this.scraper.status == 200) || (this.scraper.status == 0)) {
			var rh= this.scraper.getAllResponseHeaders(); 
			if (this.scraper.myMethod=="HEAD") return this.write( (rh==null)? "Found":rh);
			return this.write( this.scraper.responseText );
		}
		this.handleError( this.scraper.status + " - " + this.scraper.statusText );
	}
	this.handleError= function(e){ this.write(e) }
	this.isFileExist= function(url){
		this.handleError= function(e){ this.write("") }
		this.webGet( url, null, "HEAD");
	}
	this.getHeaderInfo= function(h, k, def){
		return this.lookup( this.csv2array(h,"\n",": "), k, 0, [0,def] )[1];
	}
	this.showToSave= function(s, title){
		var w=new Window();	//simply writes s to another window for saving.
		w.document.write(s);
		w.document.close();
	}
	this.anfuge= function(nm){
	  var pt= this;
	  var method= nm;
	  return function(a,b,c,d,e){ pt[method](a,b,c,d,e); }
	}
}
//-----
function MSFeatures(){
	//---- methods that rely on MS Windows ActiveX objects
	this.fso= new ActiveXObject("Scripting.FileSystemObject");
	this.wsh= new ActiveXObject("Wscript.Shell");
	this.htaFolder= function(s){	//prepends folder path of hta file
		return location.pathname+"/../"+s;
	}
	this.getFiles=function(folderPath){
	 var res= new Array(), files= this.fso.GetFolder(folderPath).Files;
	 for(var objEnum = new Enumerator(files); !objEnum.atEnd(); objEnum.moveNext())
	  res[res.length]= this.fso.GetFile(objEnum.item());
	 return res;
	}
	this.getFileNames=function(aFiles){
	 var res= new Array();
	 for (var i=0; i<aFiles.length; i++)
	  res[i]= aFiles[i].Name;
	 return res;
	}
	this.getFileProps=function(aFiles, aPropNames){
	 var res= new Array();
	 for (var i=0; i<aFiles.length; i++)
	  for (var j=0,x=res[i]=new Array(); j<aPropNames.length; j++)
	   x[x.length]= aFiles[i][aPropNames[j]];
	 return res;
	}
	this.filterFiles=function(aFiles, fcn){
	 var res=new Array();
	 for (var i=0; i<aFiles.length; i++)
	  if (fcn(aFiles[i])) res[res.length]=aFiles[i];
	 return res;
	}
}

pageApp = new PageApp(document.forms[0]);
</script>
