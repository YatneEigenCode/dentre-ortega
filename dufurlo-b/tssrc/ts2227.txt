CalcZooApp= function(){
 this.CalcApp= function(fnCode){
  new Ooze().extend(this,PageOff_HtmlApp);
  this.fnCode= fnCode;
  this.calc= new Function("x","return "+fnCode);
  this.start= function(){
	this.div = this.write( "f(x)="+this.fnCode +"; Input x:<br />");
	this.form = this.div.appendChild( document.createElement("form") );
	this.bake( this.form.appendChild( document.createElement("input") ), {name:"tx1"} );
	this.bake( this.form.appendChild( document.createElement("input") ), {type:"button",name:"btn",value:"Go"} );
	this.form.btn.onclick= this.createCBfunction("handleClick");
  }
  this.handleClick= function( el ){
	if (this.form.tx1.value.split(":")[0]=="!pragma cloneme"){
		var s= this.form.tx1.value.split(":")[1];
		s="this.start= function(){new this.CalcApp('"+s+"').start();}"
		TmpClonedCls= new Function(s+"\nthis.CalcApp="+this.constructor.toString());
		new PageOff().storeApp("TmpClonedCls");
	} else {
		var inx = this.form.tx1.value;
		this.div.appendChild( this.write( "f("+inx+")="+this.calc(inx) ) );
	}
  }
  this.createCBfunction = function(meth,arg){
	var $pthis = this;
	return function(a,b,c,d){ $pthis[meth](this,arg,a,b,c,d) }
  }
 }//inner cls
 this.start= function(){new this.CalcApp("Math.tan(Math.PI*x/180)").start()}
}