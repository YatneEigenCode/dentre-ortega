//////////////
//   2312   //
//////////////
//AutoTsRead 2312 1-20-2016 JChoy convert 2287 from html/js to a standalone js
//point to this using addJS param on curly page

//-----
function AutoTsRead(){
		this.do_tsread=function(sl){
		    var at=sl.split('/');
		    if ((at.length<4) || (at[0]!='tsread:')) return '';
		    var key= '&'+at[2]+'=';
		    var res= (location+'').replace('/tsm.php?f=html&i=',
			'/textStore.php?f=text&i='+at[3]+'&_ref=');
		    return ' '+'[http://>]'.link(res);
		}
}
//-----
function ClassMod(){
	this.swap= function( old, repl ){
		var oldBase = (old + "_base_" + Math.random()).replace(".", "_");
		window[oldBase] = window[old];
		window[old]= function(a, b, c){
		  Curly.inherit_js_class( oldBase, this );
		  Curly.inherit_js_class( repl, this );
		}
	}
}
//-----
function Muxlink(){
	if (Curly) Curly.inherit_js_class( "PreviewCsds",  this );
	this.start=function(){
		new VRS().request('vrs://csds/b/?f=body',this);
		this.reqKey = "always-locked";

		new ClassMod().swap( "AutoLinkLine", "AutoTsRead" );
	}

}


//////////////
//   2314   //
//////////////
//JsPlgd_Ml 2314 1-20-2016 JChoy showESbuttons
//from 2312 AutoTsRead
//TODO: dynamically load other aux js classes

//-----
function TextSpinner(div){
	this.seq= ['_____','_\\___','__|__','___/_','_____'];
	this.cfg= [div, 0, 0];
	this.start= function(rem){
		this.cfg[2] = rem;
		this.cfg[0].isGoOn = true;
		this.intv=setInterval( new OOCallback(this,"tick").fcn, 250 );
	}
	this.tick= function(){
		var cfg= this.cfg;
		if ((--cfg[2]<0) || (!cfg[0].isGoOn)) return clearInterval(this.intv);
		cfg[0].innerHTML = this.seq[cfg[1]++];
		if (cfg[1]>=this.seq.length) cfg[1]=0;
	}
}
function TextSpinnerTest(mas){
	this.mas = mas;
	this.render= function(div){
		div.innerHTML = "You want the truth?";
		this.dv1=div.appendChild(this.mas.createEl('div',{innerHTML:'...'}));
		new TextSpinner(this.dv1).start(31);
		setTimeout( new OOCallback(this, "showAnswer").fcn, 5000 );
	}
	this.showAnswer= function(){
		this.dv1.isGoOn = false;
		this.dv1.innerHTML = "You can't handle the truth";
	}
}
function JsPlgd_Ml(){
	if (Curly) Curly.inherit_js_class( "PreviewCsds",  this );
	this.preview=function(){
		new TextSpinnerTest(this.mas).render(this.mas.div);
		this.mas.showESbuttons();
	}
	this.showESbuttons= function(){
		this.div.appendChild(this.createEl('br'));
		var sp= this.appendSpan(' [Edit] ');
		this.spanButton(sp,'#DDDDDD','#FFFFFF',this.spanEdit);
		if (! this.reqKey){
		 sp= this.appendSpan(' [Save] ');
		 this.spanButton(sp,'#DDDDDD','#FFFFFF',this.spanSave);
		}
	}
}
Muxlink=JsPlgd_Ml;


//////////////
//   2315   //
//////////////
//JsPlgd_Ml 2315 1-20-2016 JChoy DefJsPlgd
//from 2314 TestJsPlgd
//TODO: dynamically load other aux js classes

//-----
function DefJsPlgd(mas){
	this.mas = mas;
	this.render= function(div,excep){
		at=["Write j's code for MyJsPlgd class"];
		at.push(" - that should implement render method.");
		at.push(" - render method will take 1 arg");
		at.push(" - the output html element will be supplied as arg");
		if (excep) at.push("*****<br />"+excep.toString());
		div.innerHTML= at.join("<br />");
	}
}
function JsPlgd_Ml(){
	if (Curly) Curly.inherit_js_class( "PreviewCsds",  this );
	this.preview=function(){
		try {
		  eval( this.mas.ta.value );
		  new MyJsPlgd(this.mas).render(this.mas.div);
		} catch (e) {
		  new DefJsPlgd(this.mas).render(this.mas.div,e);
		}
		this.mas.showESbuttons();
	}
	this.showESbuttons= function(){
		this.div.appendChild(this.createEl('br'));
		var sp= this.appendSpan(' [Edit] ');
		this.spanButton(sp,'#DDDDDD','#FFFFFF',this.spanEdit);
		if (! this.reqKey){
		 sp= this.appendSpan(' [Save] ');
		 this.spanButton(sp,'#DDDDDD','#FFFFFF',this.spanSave);
		}
	}
}
Muxlink=JsPlgd_Ml;

//////////////
//   2319   //
//////////////
//JPFoo 1-21-2016 JChoy JPFoo
function JPFoo(){
  this.start= function(){
    return "JP Foo";
  }
}

//////////////
//   2326   //
//////////////
//JsonLoader 1-25-2016 JChoy 2326
//-----
//This class may not deliver payload 
//if another subscriber errors out due to deleted DOM elements
function JsonLoader(){
  this.clients= [];
  this.s= function( jd ){
    for (var at=this.clients, i=0; i<at.length; i=i-(-1))
      try { at[i].obj[at[i].meth]( jd ); } catch (e) {}
  }
  this.checkSubscriber= function( client ){
    for (var at=this.clients, i=0; i<at.length; i=i-(-1))
      if ( client == at[i].obj )  return; true;
    return false;
  }
  this.subscribe= function( client, method ){
    this.clients.push( {obj:client, meth:method} );
  }
}
//-----
//idea: JsonSourcer where payload takes form of
//{t:"blah",notify:function(){new JsonSourcer().webGot(this)}.notify();

//////////////
//   2327   //
//////////////
//ApeCklist ts2327 1-31-16 JChoy v1.312 add to top, $version
//TODO: saveData should avoid slamming other's changes
//-----
function ApeCklist(){
  var $d= document;
  var $t= this;
  var $u=  atob( "aHR0cDovL3JpcC5va2RhaWx5LmNvbS9tYWQvdGV4dFN0b3JlLnBocA==" );
  this.payload= {title:"Noname",items:[]}
  this.apeNum= "110";
  this.isDelMode= false;
  this.version= "1.312";
  this.start= function(div){
    div.innerHTML= "";
    this.titleDiv= div.appendChild($d.createElement("div"));
    this.form= div.appendChild($d.createElement("form"));
    this.itemsDiv= div.appendChild($d.createElement("div"));
    this.itemsDiv.innerHTML= "loading data...";
    this.addButton("btn1", "*");
    this.addTextbox("tb1");
    div.appendChild($d.createElement("br"));
    //Curly.addJS( "TS2326" );
    //Curly.onReady( "JsonLoader", function(){ $t.webGet() } );
    this.apeNum= this.cgi("n","110",$d.location);
    this.webGet();
  }
  //---DOM
  this.addTextbox= function(nm, sz){
    var tb=this.form.appendChild($d.createElement("input"));
    tb.name= nm;
    if (sz) tb.size= sz;
  }
  this.addButton= function(nm, lbl){
    var btn=this.form.appendChild($d.createElement("input"));
    btn.value = lbl;
    btn.type= "button";
    btn.name= nm;
    btn.onclick= this.doClick;
  }
  //---event
  this.doCheck= function(){
    $t.payload.items[ this.dataIndex ].checked = (this.checked)?1:0;
    $t.saveData();
  }
  this.doClick= function(){
    var tbv= $t.form.tb1.value;
    if ($t.form.btn1.value=="Title") return $t.setTitle();
    if (!tbv) return $t.reShowItems( $t.isDelMode=!$t.isDelMode );
    $t.payload.items.push({text:tbv,checked:0});
    var num= $t.payload.items.length-1;
    $t.show1item( $t.payload.items[num], num );
    $t.saveData();
  }
  this.setTitle= function( ){
    s= $t.form.tb1.value;
    if (s=="$default") s= "ApeCklist v"+this.version;
    if (s) $d.title= $t.titleDiv.innerHTML= $t.payload.title= s;
    var isNorm = $t.form.btn1.value=="*";
    $t.form.btn1.value= (isNorm)? "Title":"*";
  }
  //---comm
  this.saveData= function(){
    var res= "!/c/psdb /s {0} !/ENDCMD\nif (_j) _j.s( {1} )";
    res= res.replace("{1}", JSON.stringify($t.payload));
    res= res.replace("{0}", this.apeNum );
    res= [$u,"?f=set&i=2321&data=",escape(res)].join('');
    var img= new Image();
    $d.body.appendChild( img ).src= res;
    img.height=1;
  }
  this.webGet= function(){
    if (!window["_j"]) _j= new JsonLoader();
    if (!_j.checkSubscriber(this))
      _j.subscribe( this, "gotWebData" );
    var at= ["https://dl.dropboxusercontent.com"]
    at.push( "/u/28448395/jsondata/psdb/ape/3d/" );
    at.push( this.apeNum.split('').join("/") + ".txt");
    var el= $d.createElement("script");
    el.src= at.join("");
    $d.getElementsByTagName('head')[0].appendChild( el );
  }
  this.gotWebData= function( jd ){
    $t.payload = jd;
    $d.title= $t.titleDiv.innerHTML= jd.title;
    $t.reShowItems();
  }
  this.cgi= function(k,def,qy){
	var at=(qy+"").split(new RegExp("[\&\?]"+k+"=")); 
	return (at.length==1)?def:at[1].split("&")[0];
  }
  //---UI
  this.reShowItems= function( isDel ){
    $t.itemsDiv.innerHTML= "";
    for (var i=0,at=$t.payload.items; i<at.length; i++ )
      $t.show1item( at[i], i, isDel );
    $t.titleDiv.onclick= $t.setTitle;
  }
  this.show1item= function( item, i, isDel ){
      var div=$t.itemsDiv.appendChild($d.createElement("div"));
      $t.itemsDiv.insertBefore(div,$t.itemsDiv.firstChild);
      var cb =div.appendChild($d.createElement("input"));
      cb.type= "checkbox";
      cb.dataIndex = i;
      cb.onchange= $t.doCheck;
      cb.checked= (item.checked==1);
      var spn =div.appendChild($d.createElement("span"));
      spn.innerHTML = item.text;
      if (isDel) {
        var btn =div.appendChild($d.createElement("input"));
        btn.type= "button";
        btn.dataIndex= i;
        btn.value= "Del";
        btn.onclick= $t.doDel;
      }
  }
  this.doDel= function(){
    $t.payload.items.splice( this.dataIndex, 1 );
    $t.reShowItems( $t.isDelMode );
    $t.saveData();
  }
}
