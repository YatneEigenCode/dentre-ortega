<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=1" />
<html>
<span>Click on image to edit</span>
<form>
<select style="display:none" name=sel1></select><select style="display:none" name=sel2></select>
<input type=button value=Save name=save style="display:none;margin:2 5 2 5" onclick="this.form.helper.doButtonClick(this)">
</form>
<a href="#"><img src="http://demo-project-jcc9.c9.io/mimebob?i=3" alt="gmail web: click to see image">/<img src="http://demo-project-jcc9.c9.io/mb64?i=9" 
alt="This jpg version of the data may not be up to date because some browsers do not support jpg rendering."></a>
<br />Note: This jpg version on the right may not be up to date because another user with an old browser (that does not support jpg rendering) may have performed edits. The jpg version is only for sending to gmail users because gmail's image
caching engine does not expect svg images.

<div style="display:none"><?xml version="1.0"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg id="deadgear" width="300" height="220" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <rect x="0" y="0" height="220" width="300" style="fill: #DCDCBC"/>
  <rect x="5" y="5" height="210" width="290" style="fill: #005577"/>
  __$CUSTOM_SVG$__
</svg>
</div>

<script src="/mad/textStore.php?f=text&i=2243"></script>
<script>
//9-28-15 JChoy v1.115 ts2249 troubleshooting save-jpg in firefox
//9-27-15 JChoy SvgEd ts2248 - no gradient, save jpg
//TODO: atomic svg/jpg both or none
//-----
function SvgEd(){
  new Ooze().bake(this);
  this.mbsUrl= "http://demo-project-jcc9.c9.io/mbs?i=3";
  this.datUrl= "http://rip.okdaily.com/mad/textStore.php?f=text&i=2247";
  this.customSvg= '<text id="tx0" fill="yellow" font-size="18" font-family="Arial" x="30" y="__$Y$__">';
  this.start= function(){
	this.initDom(document);
  }
  this.initDom= function( $d ){
	if ($d.images.length==0) return;
	$d.images[0].onclick= this.imgClickFcn;
	$d.images[0].helper = this;
	$d.images[0].form= $d.forms[0];
	this.dataDiv= $d.getElementsByTagName("div")[0];
	this.hintSpan= $d.getElementsByTagName("span")[0];
  }
  this.randCgi= function(){
 	return "&r=" +Math.random();
  }
  this.imgClickFcn= function(){
 	new SrcCls().start( "svgData", this.helper.datUrl+this.helper.randCgi(), 
	   this.helper.createCBfunction("doUserInput",this) );
	return false;
  }
  this.doUserInput= function(ob, img, data){
	this.data= data;
	this.hintSpan.style.display= "none";
	return img.helper.showForm(img.form);
  }
  this.showForm= function(form){
	form.helper= this;
	form.sel1.options.length=0;
	this.fillSel( form.sel1, this.data.items );
	form.sel1.onchange= this.showSel2Fcn;
	form.sel1.style.display= "block";
  }
  this.showSel2Fcn= function(){
	var $f= this.form;
	var data= $f.helper.data;
	if ($f.sel2.options.length==0) $f.helper.fillSel( $f.sel2, data.responseChoices );
	$f.helper.setSelectedValue( $f.sel2, data.responses[this.selectedIndex] );
	$f.sel2.style.display= $f.save.style.display= "block";
  }
  this.doButtonClick= function( el ){
	var n=this.arrIndexOf( this.data.items, this.getSelectedText(el.form.sel1) );
	this.data.responses[n]= this.getSelectedText(el.form.sel2);
	var res= this.data.name +"="+ JSON.stringify(this.data);
	var img= document.images[0];
	img.onload= img.onerror= this.saveSvgFcn;
	img.src= this.datUrl.replace("?f=text","?f=set")+"&data="+escape(res);
  }
  this.prepSvg= function(){ 
	var res= this.customSvg.replace("__$Y$__",20)+ this.data.question +"</text>";
	res = res.replace( "fill=\"yellow\"", "fill=\"orange\"" );
	for (var i=0,f=45,at=this.data.items; i<at.length; i++)
	  res+= this.customSvg.replace("__$Y$__",f+i*20)+ at[i] +"</text>";
	var respSvg = this.customSvg.replace( "x=\"30\"", "x=\"200\"" );
	for (var i=0,f=45,at=this.data.responses; i<at.length; i++)
	  res+= respSvg.replace("__$Y$__",f+i*20)+ at[i] +"</text>";
	return this.dataDiv.innerHTML.replace("__$CUSTOM_SVG$__", res );
  }
  this.saveSvgFcn= function(){ 
	 var helper = this.helper;
	 if (!helper.dataDiv) return;
	 this.onload= this.onerror= helper.imgLoadFcn;
	 this.src= helper.mbsUrl+"&data="+escape(helper.prepSvg());
  }
  this.imgLoadFcn= function(){
	var url = this.helper.mbsUrl.replace("3","9").replace("/mbs","/mbs64");
	this.onerror= null;
	this.onload= new SvgJpgSaver(url).createCBfunction( "save", this );
	this.src= this.helper.mbsUrl.replace("/mbs?","/mb?")+"&r="+Math.random();
  }
  this.extendClass( SelectUtil );
}

//-----
function SvgJpgSaver(mbsUrl){
  new Ooze().bake( this );
  this.mbsUrl= mbsUrl;
  this.proofImg = document.images[1];
  this.dsvg= "data:image/svg+xml;base64,";
  this.save= function(img, va){
	var cnv= document.createElement("canvas");
	this.bake( cnv, {width:img.width, height:img.height} )
	var im= this.monologue( this.dsvg + btoa(img.helper.prepSvg()) );
	cnv.getContext('2d').drawImage( im, 0, 0 );

	var s= cnv.toDataURL('image/jpeg', 0.1);
	this.monologue( this.mbsUrl + "&data="+escape(s.substr(23)) );
	this.proofImg.src= s;
  }
  this.monologue= function(url){
	var img=new Image();
	img.src= url;
	return img;
  }
}
new SvgEd().start();
</script>
<html>
