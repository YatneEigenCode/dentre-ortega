//as found in 2102
//11-9-14 JChoy test stub
//11-11-14 JChoy regexp replace; muxUrl
//11-15-14 JChoy JGetDemo4 2070
//11-19-14 JChoy RandomName()
//11-20-14 JChoy JIOByNum, saveDataNicely
//11-24-14 JChoy resurrecting lost 2084
//TODO: 
//-----
function QuikMob(){
	if (Curly) Curly.inherit_js_class( "ViewRO",  this );
	if (Curly) Curly.inherit_js_class( "DomHelper",  this );
	this.btnLabel = "GO";
	this.aUtil = [];
	this.start=function(){
		if (!(new Darwin().isAcceptable()))
			return this.write("Really? you call this a browser?");
		this.div.innerHTML= "Loading...";
		this.userid= new RandomName().getUserID();
		this.myVals= {id:this.userid, val:"", name:"My Name"}
		this.slotNum = this.cgi("dn","2078",location);
		this.jGetter= new JIOByNum();
		this.refresh("startD");
	}
	this.refresh= function(meth){
		this.jGetter.jGet( this.slotNum, new OOCallback(this,meth).fcn );
	}
	this.saveMyData= function(){
		if (typeof(this.myIndex)==='undefined') return this.refresh("saveData");
		var old= this.jsonObj.list[this.myIndex];
		if (old.name+old.val==this.myVals.name+this.myVals.val) return;
		this.refresh( "saveData" );
	}
	this.saveData= function(s){
		this.jsonObj = JSON.parse(s);
		if (typeof(this.myIndex)==='undefined') this.jsonObj.list.push(this.myVals)
		else this.jsonObj.list[this.myIndex]=this.myVals;
		this.jGetter.jSave( JSON.stringify(this.jsonObj) );
		this.startD( JSON.stringify(this.jsonObj) );
	}
	this.setMyVals= function(ar,i){
		this.myVals.name=ar.name;
		this.myVals.val=ar.val;
		this.myIndex= i;
		return "*";
	}
	this.startD= function(s){
		this.jsonObj = JSON.parse(s);
		this.div.innerHTML = "";
		for (var i=0,aUtil=[],at=this.jsonObj.list; i<at.length; i++)
			aUtil.push( [at[i].name,at[i].val,(at[i].id==this.userid)?this.setMyVals(at[i],i):""] );
		this.div.appendChild(this.mkDiv(this.jsonObj.q));
		this.div.appendChild(this.mkTable(aUtil,{border:"1",cellSpacing:0}));
		var fcn = new OOCallback(this,"handleBlur").fcn;
		this.div.appendChild(this.mkTxBx(20,this.myVals.name,"tx1")).onblur= fcn;
		this.showChoices(fcn);
	}
	this.showChoices= function(fcn){
		var div = this.div.appendChild(this.mkDiv(""));
		for (var i=0,at=this.jsonObj.choices; i<at.length; i++){
			div.appendChild(this.mkButton(at[i])).onclick= fcn;
			div.lastChild.style.margin= 4;
			div.lastChild.purpose="choice";
		}
		this.div.appendChild(this.mkButton("Refresh")).onclick= fcn;
	}
	this.handleBlur= function(arg1){
		var tg = arg1.target;
		if (tg.name=="tx1")  this.myVals.name= tg.value;
		if (tg.value=="Refresh")  { tg.disabled=true; return this.refresh("startD"); }
		if (tg.purpose)  { tg.disabled=true; this.myVals.val=tg.value; }
		this.saveMyData();
	}
}
